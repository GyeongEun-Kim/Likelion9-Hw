1. 웹 & 웹서비스
1) 웹 서비스
-  사용자의 요청(request)에 응답하는 서버
2) 요청(request)의 종류
get - (html파일을) 갖다주세요
post - (html파일을) 처리해주세요
3) 웹
- 인터넷, 많은 클라이언트-서버관계들이 얽혀 만들어진 정보망
4) 웹 브라우저
-클라이언트-서버관계에서 오가는 html을 받아주고 보내주는 역할을 하는것 

2. 웹 서버를 만드는 방법
1) 웹서버를 만드는 방법
- 웹서비스를 만든다 = 서버용 프로그램을 만들다
2) 서버컴퓨터
- 신경 써야 할 부분만 확실히 신경 쓴 컴퓨터
3) 서버 컴퓨터의 특징
- 빠른 컴퓨팅 능력
- 24시간 무한루프
- 냉각 장치
- 클라이언트 수 고려
- 보안 중요
4) 서버가 되기 위한 두가지 방법
- 내 컴퓨터를 직접서버 컴퓨터화(= 로컬 환경 세팅, 웹서버를 직접 설치)
- 이 세상 어딘가의 서버 컴퓨터 빌리기(웹 호스팅 업체 이용)
5) 서버프로그램을 만드는 방법
5-1) 로컬 환경 세팅
- 설치 다소 까다로움
- 추가적인 지식 요구
- 한번 익히면 자유로운 개발 가능
- 아파치,IIS
5-2) 웹 호스팅 업체 이용
- 설치와 조작이 단순
- 과금 발생
- 개발에 있어 제약이 생길 수 있음
- 클라이언트 수를 고려하지 않아도 됨
- GitHub,AWS,c9

3. HTML
1) HTML(Hyper Text Markup Language)
- 웹 페이지에 쓰이는 마이크업 언어
2) HTML의 구성
- 글, 태그, 속성
3) Hyper Text
- 한 문서에서 다른 문서로 즉시 접근 할 수 있는 텍스트
- 원래 문서를 앞-> 뒤 순으로 읽음
- hyper text를 사용하면 링크를 통해 연결된 문서를 자유롭게 이동 가능함
4) Markup Language
- 컴퓨터가 알아들을 수 있는 언어
- 태그,마크 등을 이용하여 문서나 데이터의 구조를 명시하는 언어로 프로그래밍 언어와 구별됨
5) HTML & CSS & JS
- html: 웹페이지의 구조
- css: 웹페이지의 스타일
- js: 웹페이지의 동작

4. HTML 기초
1) 요소와 태그
- 태그: '<>'로 이루어져 글을 감싸고 있는 부분
  시작태그: <>
  종료태그: </>
- 내용: 태그와 태그 사이 부분
- 속성: 태그 안의 속성을 나타내는 부분
2) HTML 문서 구조
<!DOCTYPE html>  :  문서의 형식을 정의
<html lang="ko"></html>  : 본격적인 태그의 시작으로 사용하는 주언어가 한국어임을 정의
<head></head>  :  헤드 태그로 직접화면에 나오지는 않으나 이 문서를 설명함
<meta charset="utf-8">  :  html에서 쓰이는 한글이 깨지지 않도록 돕는 역할
<title></title>  :  웹페이지의 제목을 나타내는 태그
<body></body>  : 직접적으로 화면에 보여지는 태그
3) 텍스트 관련 태그
<h1></h1>  : 중요한 제목을 작성, 중요도에 따라 1~6까지 사용
<br> : 줄바꿈
4) 리스트 관련 태그
<ol></ol>  : 순서가 있는 리스트
<ul></ul>  : 순서가 없는 리스트
type="문자"  : 순서가 시작되는 문자 지정
5) 폼 태그
<form></form>  : 전송 받을 대상에게 입력 받는 내용을 전송
action = "전송 받을 대상"  : 데이터를 보낼 url 지정
<input>  : 사용자에게 입력을 받기 위해 사용하는 태그
<label> : 해당 라벨 클릭 시 <input> 태그 활성화
<select>  : 아래로 펼치지는 목록 상자
<option>  :  html select 태그 내부의 항목
6) <input> 태그 속성
type="text"  : <input> 태그의 종류를 결정
name="name"  :  name을 key로, 입력받은 데이터를 value로 전송
value="지정 값"  :  데이터를 지정 값에 넣으면 이 속성에 값이 들어가며 초기값 그대로 사용
7) <textarea> 태그 속성
cols="숫자"  :  너비 크기
rows="숫자" :  높이 크기
8) 이미지태그
<img src="이미지 url">  :  이미지 불러오기

5. Bootstrap
1) Bootstrap이란?
- twitter 개발자들이 만든 css/javascript 기반의 웹 프레임워크
- html 꾸밀 수 있음
2) 장점
- 오픈 소스를 무료로 사용가능
-  반응형 웹 지원 (자동화면 조정)
- 브라우저 호환성
3) 단점
- 티가 잘남
- 기능을 단순이 빌려온거라 처음부터 최적화하며 개발된 웹에 비해 성능이 떨어짐
4) 사용법
- 부트스트랩 CDN을 복사
- html 파일 내 <head> 태그 안에 붙여넣기
- 최신버전 jQuery 코드복사
- html 파일 내 <head> 태그 내 맨위에 붙여넣기
- 원하는 것들(콘테이너, 버튼 네비게이션바 등)을 복사하여 <body> 내에 사용

6. Github 배포
1) Github의 역할
- code 저장 기능
- Undo(되돌리기)기능
- 협업기능
+ web hosting기능(서버의 역할을 대신해주고 배포가능)